// Code generated by mockery v2.30.1. DO NOT EDIT.

package service

import (
	context "context"

	uuid "github.com/google/uuid"
	mock "github.com/stretchr/testify/mock"
)

// mockRepoVocabAdmin is an autogenerated mock type for the repoVocabAdmin type
type mockRepoVocabAdmin struct {
	mock.Mock
}

// ChangeVocabTranslationLang provides a mock function with given fields: ctx, vid, lang
func (_m *mockRepoVocabAdmin) ChangeVocabTranslationLang(ctx context.Context, vid uuid.UUID, lang string) error {
	ret := _m.Called(ctx, vid, lang)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, string) error); ok {
		r0 = rf(ctx, vid, lang)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newMockRepoVocabAdmin creates a new instance of mockRepoVocabAdmin. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockRepoVocabAdmin(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockRepoVocabAdmin {
	mock := &mockRepoVocabAdmin{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
