// Code generated by mockery v2.30.1. DO NOT EDIT.

package service

import mock "github.com/stretchr/testify/mock"

// mockEmailSvc is an autogenerated mock type for the emailSvc type
type mockEmailSvc struct {
	mock.Mock
}

// SendEmailForUpdateEmail provides a mock function with given fields: toEmail, userName, code
func (_m *mockEmailSvc) SendEmailForUpdateEmail(toEmail string, userName string, code int) error {
	ret := _m.Called(toEmail, userName, code)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, int) error); ok {
		r0 = rf(toEmail, userName, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendEmailForUpdatePassword provides a mock function with given fields: toEmail, userName, code
func (_m *mockEmailSvc) SendEmailForUpdatePassword(toEmail string, userName string, code int) error {
	ret := _m.Called(toEmail, userName, code)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, int) error); ok {
		r0 = rf(toEmail, userName, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newMockEmailSvc creates a new instance of mockEmailSvc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockEmailSvc(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockEmailSvc {
	mock := &mockEmailSvc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
